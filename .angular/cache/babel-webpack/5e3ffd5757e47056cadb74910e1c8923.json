{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { ScatterResultSheetComponent } from './features/scatter-result-sheet/scatter-result-sheet.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/bottom-sheet\";\nimport * as i2 from \"./features/header/header.component\";\nimport * as i3 from \"./features/user-content-input/user-content-input.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(_scatterResultSheet) {\n      this._scatterResultSheet = _scatterResultSheet;\n      this.emailFormObject = new FormControl('');\n      this.tagFormObject = new FormControl('');\n    }\n\n    ngOnInit() {\n      this.setAngularLocalStorage();\n    }\n\n    setAngularLocalStorage() {\n      this.localStorage = window.localStorage;\n      this.storageLengthItr = Array(window.localStorage.length).fill(0);\n    }\n\n    getStorageKeyByIndex(index) {\n      return window.localStorage.key(index);\n    }\n\n    setTagForReuse(keyIndex) {\n      let key = this.getStorageKeyByIndex(keyIndex);\n      let emailCsv = window.localStorage.getItem(key);\n      this.emailFormObject.setValue(emailCsv);\n      this.tagFormObject.setValue(key);\n    }\n\n    deleteTag(keyIndex) {\n      let key = this.getStorageKeyByIndex(keyIndex);\n      window.localStorage.removeItem(key);\n      this.setAngularLocalStorage();\n    }\n\n    onFormSubmit() {\n      var _a, _b;\n\n      let emailCsv = (_a = this.emailFormObject.value) === null || _a === void 0 ? void 0 : _a.trim();\n      let tag = (_b = this.tagFormObject.value) === null || _b === void 0 ? void 0 : _b.trim();\n      this.emailList = emailCsv.split(';').map(ele => ele.trim()).filter(ele => ele.length > 0);\n      if (!this.emailList || !this.emailList.length) return;\n\n      if (tag && tag.length && window.localStorage.getItem(tag) === null) {\n        window.localStorage.setItem(tag, emailCsv);\n        this.setAngularLocalStorage();\n      }\n\n      this.runScatter();\n    }\n\n    runScatter() {\n      let tmpEmailList = this.emailList;\n      this.emailList = new Array();\n\n      while (tmpEmailList.length) {\n        let rndIndex = Math.floor(Math.random() * tmpEmailList.length);\n        this.emailList.push(tmpEmailList[rndIndex]);\n        tmpEmailList.splice(rndIndex, 1);\n      }\n\n      this._scatterResultSheet.open(ScatterResultSheetComponent, {\n        data: {\n          names: this.emailList\n        }\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MatBottomSheet));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"root-block\"], [1, \"content-block\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-user-content-input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i2.HeaderComponent, i3.UserContentInputComponent],\n    styles: [\".root-block[_ngcontent-%COMP%]{height:100%;display:flex;flex-flow:column;align-items:center;justify-content:space-between}.content-block[_ngcontent-%COMP%]{background-image:url(teams.png);background-repeat:no-repeat;background-size:cover;background-position:center;width:100%;height:100%;display:flex;flex-flow:column;justify-content:center}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}